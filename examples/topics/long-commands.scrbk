#lang scribble/manual

@title{Commands}

Xiden's CLI requires an argument for italic{every} flag.  You
therefore cannot combine short flags into strings like
@litchar{-vUi}. You must instead write something like @litchar{-v '#t'
-U '#f' -i '#t'}.

Verbose commands are more painful to type, so why do it this way?
Because there are a few benefits to this approach:

@itemlist[

@item{
Passing values to flags keeps the entire command explicit and self-describing.
Let's say @racket[XIDEN_VERBOSE] is @racket[#t] due to an environment
variable or rcfile. Assuming that you do not change the environment variable,
you would not be able to change that back to @racket[#f]
in a command line without expressing @racket[#f].
}

@item{
What you type is what gets used at runtime, so long as it meets a
contract. This makes commands easier to predict for Racket
programmers, because they can visualize exact values at play.
}

@item{
Every setting has a canonical name, meaning that no matter where
you define a value, you can use the same name. Short flags
are merely bound to the same setting as the flags with
canonical names.

@racketblock[
(define XIDEN_VERBOSE #t)
]

@verbatim|{
$ XIDEN_VERBOSE="#t" xiden ...
}|

@verbatim|{
# Equivalent
$ xi --XIDEN_VERBOSE "#t" ...
$ xi -v "#t" ...
}|
}
]
