#! /usr/bin/env racket
#lang xiden/launcher

(require racket/match net/url)

(module+ main
  (void (XIDEN_TRUST_BAD_DIGEST #t
    (λ ()                          
      (parameterize ([current-shovel shovel]
                     [current-chfs (list snake-oil-chf)])
        (interpret-command-line (current-command-line-arguments)))))))

(define (shovel url-string)
  (subprogram-unit (artifact (http-source url-string) #f #f)))

(define (interpret-command-line args)
  (match args
    [(vector)
     (raise-user-error "usage: lnx https://example.com/path/to/file /path/to/link")]
    [(vector url-string)
     (interpret-command-line (vector url-string (file-name-from-url-string url-string)))]
    [(vector url-string link-name)
     (match (parse-url url-string)
     [(url "https" _ _ _ _ _ _ _)
      (make-addressable-link
       (run+print-subprogram
        (mdo arti := (find-artifact url-string)
             (fetch-artifact url-string arti)))
       link-name)]
     [_ (raise-user-error "URL must use https, and include a path.")])]))

(define (file-name-from-url-string url-string)
  (match (parse-url url-string)
    [(url _ _ _ _ _ (list _ ... (path/param file-name _)) _ _)
     file-name]
    [_ DEFAULT_STRING]))

(define (parse-url url-string)
  (with-handlers ([(λ (e) (not (exn:break? e)))
                   (λ _ (string->url ""))])
    (string->url url-string)))
